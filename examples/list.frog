data list = Cons int list | Nil

# Return true if the second element of the list is n, otherwise false.
let is_second_element n head : int list -> bool =
    match head with
    | Cons _ next -> (match next with
                      | Cons m _ -> n == m
                      | Nil -> False)
    | Nil         -> False

let main : @in -> @out =
    let input : int = @in in
    let l : list = Cons 1 (Cons 2 (Cons 3 Nil)) in
    @out (is_second_element input l)
